/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.kaiec.retro.data;

import java.awt.Component;
import java.util.logging.Logger;
import org.netbeans.api.progress.ProgressHandle;
import org.netbeans.api.progress.ProgressHandleFactory;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
//import org.openide.util.ImageUtilities;
import org.netbeans.api.settings.ConvertAsProperties;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.kaiec.retro.data//Management//EN",
autostore = false)
public final class ManagementTopComponent extends TopComponent {

    private static ManagementTopComponent instance;
    /** path to the icon used by the component and its open action */
//    static final String ICON_PATH = "SET/PATH/TO/ICON/HERE";
    private static final String PREFERRED_ID = "ManagementTopComponent";

    public ManagementTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(ManagementTopComponent.class, "CTL_ManagementTopComponent"));
        // setToolTipText(NbBundle.getMessage(ManagementTopComponent.class, "HINT_ManagementTopComponent"));
//        setIcon(ImageUtilities.loadImage(ICON_PATH, true));

        jPanel1.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        importListButton = new javax.swing.JButton();
        importContextButton = new javax.swing.JButton();
        importRVKButton = new javax.swing.JButton();
        importExcelButton = new javax.swing.JButton();
        selectDatabaseButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        importExcelButton1 = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(importListButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.importListButton.text")); // NOI18N
        importListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importListButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(importContextButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.importContextButton.text")); // NOI18N
        importContextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importContextButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(importRVKButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.importRVKButton.text")); // NOI18N
        importRVKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importRVKButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(importExcelButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.importExcelButton.text")); // NOI18N
        importExcelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importExcelButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(selectDatabaseButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.selectDatabaseButton.text")); // NOI18N
        selectDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDatabaseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(exportButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.exportButton.text")); // NOI18N
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(importExcelButton1, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.importExcelButton1.text")); // NOI18N
        importExcelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importExcelButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(importExcelButton1)
                    .addComponent(importExcelButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(importRVKButton)
                            .addComponent(importListButton)
                            .addComponent(importContextButton))
                        .addGap(135, 135, 135)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(exportButton)
                            .addComponent(selectDatabaseButton))))
                .addContainerGap(294, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importRVKButton)
                    .addComponent(selectDatabaseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importListButton)
                    .addComponent(exportButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importContextButton)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importExcelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importExcelButton1)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(loginButton, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.loginButton.text")); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordField.setText(org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.passwordField.text")); // NOI18N
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ManagementTopComponent.class, "ManagementTopComponent.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton))
                .addGap(65, 65, 65)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        if (String.copyValueOf(passwordField.getPassword()).equals("admax")) {
            jPanel1.setVisible(true);
        }
        passwordField.setText("");
    }//GEN-LAST:event_loginButtonActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
       loginButtonActionPerformed(evt);
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void importRVKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importRVKButtonActionPerformed
        new ImportRVKDescs().actionPerformed(evt);
    }//GEN-LAST:event_importRVKButtonActionPerformed

    private void importListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importListButtonActionPerformed
        new ImportListAction().actionPerformed(evt);
    }//GEN-LAST:event_importListButtonActionPerformed

    private void importContextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importContextButtonActionPerformed
        new ImportContextListAction().actionPerformed(evt);
    }//GEN-LAST:event_importContextButtonActionPerformed

    private void importExcelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importExcelButtonActionPerformed
        new ImportExcel().actionPerformed(evt);
    }//GEN-LAST:event_importExcelButtonActionPerformed

    private void selectDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDatabaseButtonActionPerformed
        new SelectDatabase().actionPerformed(evt);
    }//GEN-LAST:event_selectDatabaseButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        new Export().actionPerformed(evt);
    }//GEN-LAST:event_exportButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        HibernateUtil.getInstance().getSession().createSQLQuery("delete from record").executeUpdate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void importExcelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importExcelButton1ActionPerformed
        final String file = DirectoryManager.getInstance().chooseFile("Listendatei auswählen", (Component) evt.getSource());
        if (file==null) {
            return;
        }



                final ProgressHandle progressHandle = ProgressHandleFactory.createHandle("Import");

        new Thread(new Runnable() {

            @Override
            public void run() {
            ListImporter importer = new ListImporter(file,false,true,true);
            importer.setProgressHandle(progressHandle);
            progressHandle.start();
            importer.start();
            progressHandle.finish();
            RecordList.getInstance().datachanged();
            }
        }, "RVK Descs").start();

    }//GEN-LAST:event_importExcelButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportButton;
    private javax.swing.JButton importContextButton;
    private javax.swing.JButton importExcelButton;
    private javax.swing.JButton importExcelButton1;
    private javax.swing.JButton importListButton;
    private javax.swing.JButton importRVKButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton selectDatabaseButton;
    // End of variables declaration//GEN-END:variables
    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized ManagementTopComponent getDefault() {
        if (instance == null) {
            instance = new ManagementTopComponent();
        }
        return instance;
    }

    /**
     * Obtain the ManagementTopComponent instance. Never call {@link #getDefault} directly!
     */
    public static synchronized ManagementTopComponent findInstance() {
        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
        if (win == null) {
            Logger.getLogger(ManagementTopComponent.class.getName()).warning(
                    "Cannot find " + PREFERRED_ID + " component. It will not be located properly in the window system.");
            return getDefault();
        }
        if (win instanceof ManagementTopComponent) {
            return (ManagementTopComponent) win;
        }
        Logger.getLogger(ManagementTopComponent.class.getName()).warning(
                "There seem to be multiple components with the '" + PREFERRED_ID
                + "' ID. That is a potential source of errors and unexpected behavior.");
        return getDefault();
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_ALWAYS;
    }

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    Object readProperties(java.util.Properties p) {
        if (instance == null) {
            instance = this;
        }
        instance.readPropertiesImpl(p);
        return instance;
    }

    private void readPropertiesImpl(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }
}
